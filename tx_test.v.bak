module tx_test(en,clk,tx);
input en;
input clk;
integer count,j;
output reg tx;
reg[7:0] a;
parameter state1=2'b00;
parameter state2=2'b01;
parameter state3=2'b10;
parameter state4=2'b11;

initial begin 
a="F"; /*a[1]="I"; a[2]="M"; a[3]="E"; a[4]="-"; a[5]="E"; a[6]="S"; a[7]="U"; a[8]="-"; a[9]="#";*/
count=0;
current_state=0;
next_state=0;
j=0;
end

reg [1:0] current_state, next_state;
always @ (posedge clk) begin
	if(j==0)a="F";
	if(j==1)a="I";
	if(j==2)a="M";
	if(j==3)a="-";
	if(j==4)a="E";
	if(j==5)a="S";
	if(j==6)a="U";
	if(j==7)a="1";
	if(j==8)a="-";
	if(j==9)a="#";


	if(j<10)begin 
		case (current_state)
		state1:begin
			if (en==0)begin  next_state=state2;
					count=0;
				end
			else next_state=state1;
			end
		state2:begin
			count=count+1;
			if (count==434) begin next_state=state3;count=0; end
			else next_state=state2;
			end
		state3:begin
			count=count+1;
			if (count==3472) begin next_state=state4;count=0; end
			else next_state=state3;
			end
		state4:begin
			count=count+1;
			if (count==434) begin next_state=state1;count=0; j=j+1; end
			else next_state=state4;
			end
		endcase
	current_state=next_state;
	end
end
always @ (posedge clk) begin
	case (current_state) 
		state1:tx=1;
		state2:tx=0;
		state3:tx=a[count/434];
		state4:tx=1;
	endcase
		

end
endmodule